apiVersion: batch/v1
kind: Job
metadata:
  name: ffmpeg-pull-test
spec:
  completions: 5
  parallelism: 5
  ttlSecondsAfterFinished: 60
  template:
    spec:
      containers:
      - name: ffmpeg
        image: "ossrs/oryx:v5.15.20"
        imagePullPolicy: IfNotPresent
        command:
        - bash
        - -c
        - |-
          echo "pull live streams by ffmpeg"
          echo "start 100 * 10 ffmpeg processes to pull streams"

          for ((i=1;i<=100;i++)); 
          do
            # generate random number in range [1-40], represent which stream.
            r=`shuf -i 1-40 -n 1`
            echo $r
            # random pull streams https://stream-dev.jars.ai/live/test${r}.m3u8
            ffmpeg -nostdin -loglevel quiet -i https://stream-dev.jars.ai/live/test${r}.m3u8 -c copy -f null - &
          done
          
          while true; do
            sleep 1
            if [[ $(ps aux |grep ffmpeg |grep -v grep |grep -v usr |grep -q ffmpeg || echo no) == no ]]; then
              echo "all ffmpeg process done"
              break
            fi
          done
          echo "complete ffmpeg job"
      restartPolicy: Never







